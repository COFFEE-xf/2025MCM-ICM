% 层次聚类法是一种帮助理解数据内在关系的算法，并且可以通过树状图可视化

% 一、凝聚型层次聚集(Agglomerative Hierarchical Clustering)
% 1.初始化：将每个数据点视为一个单独的聚类。
% 2.计算距离：计算所有聚类之间的距离。常用的距离度量方法包括：
%   单链接（Single Linkage）：两个聚类之间的最小距离。
%   完全链接（Complete Linkage）：两个聚类之间的最大距离。
%   平均链接（Average Linkage）：两个聚类中所有点对的平均距离。
%   Ward's 方法：最小化聚类内的方差，即两个聚类合并后总的方差增加最小。
% 3.合并聚类：选择距离最近的两个聚类进行合并。
% 4.更新距离矩阵：合并后，更新聚类间的距离矩阵。
% 5.重复步骤2-4：直到所有数据点都合并成一个聚类，或者达到预设的聚类数量。
% 6.生成树状图：通过记录每次合并的聚类和距离，可以生成一个树状图来展示聚类的层次结构。

% X是一个包含数据点的矩阵，每行代表一个数据点，每列代表一个特征
X = rand(10, 3); % 随机生成10个数据点，每个数据点有3个特征
 
% 使用linkage函数进行层次聚类
% 'ward'是链接方法，也可以使用'single', 'complete', 'average'等
Z = linkage(X, 'ward');
 
% 使用dendrogram函数绘制树状图
figure;
dendrogram(Z);
title('层次聚类树状图');
xlabel('数据点');
ylabel('距离');
 
% 如果你想将数据点划分为K个聚类，可以使用cluster函数
K = 3; % 假设我们想将数据分为3个聚类
clusters = cluster(Z, 'maxclust', K);
 
% 可视化聚类结果
figure;
gscatter(X(:,1), X(:,2), clusters);
title('层次聚类结果');
xlabel('特征1');
ylabel('特征2');

%-----------------------------------------------------------------------------------------------

% 二、分裂型层次聚类(Divisive Hierarchical Clustering)
% 1.初始化：将所有数据点作为一个大的聚类。
% 2.选择聚类：选择一个聚类进行分裂。通常选择具有最大直径（最远点对距离）或最大方差的聚类。
% 3.分裂聚类：将选定的聚类分裂成两个子聚类。分裂的方式可以是垂直于最大方差的方向，或者基于某种距离度量。
% 4.更新聚类集合：将分裂后的子聚类加入到聚类集合中。
% 5.重复步骤2-4：直到每个聚类只包含一个数据点，或者达到预设的聚类数量。
% 6.生成树状图：通过记录每次分裂的聚类，可以生成一个树状图来展示聚类的层次结构。
